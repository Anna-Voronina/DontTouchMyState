{"version":3,"file":"static/js/434.4e03701c.chunk.js","mappings":"8QAGaA,EAAkBC,EAAAA,GAAAA,IAAH,0lBA4BfC,EAAcD,EAAAA,GAAAA,GAAH,2JAQXE,EAAaF,EAAAA,GAAAA,IAAH,kEAKVG,EAAaH,EAAAA,GAAAA,KAAH,wGAIZ,qBAAGI,MAAqB,EAAI,UAAY,SAAxC,IAGEC,GAAcL,EAAAA,EAAAA,IAAOM,EAAAA,IAAPN,CAAH,yD,UCtCXO,EAAU,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,MACdC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAChC,GAAsDC,EAAAA,EAAAA,UAAS,GAA/D,eAAOC,EAAP,KAA4BC,EAA5B,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRX,GAASY,EAAAA,EAAAA,IAAgBV,IAAOW,MAAK,SAAAC,GAAI,OACvCJ,EAAuBI,EAAKC,QAAQC,YADG,GAG1C,GAAE,CAAChB,EAAUK,KAGZ,UAACd,EAAD,YACE,SAACE,EAAD,UAAa,kBACb,UAACC,EAAD,YACE,SAACG,EAAD,KACA,SAACF,EAAD,CAAYC,MAAOa,EAAnB,SACGQ,OAAOR,GAAqBS,QAAQ,UAK9C,C,sFClCYC,EAAe3B,EAAAA,GAAAA,OAAH,yxBACd,qBAAG4B,MAAkBC,QAAQ,GAA7B,IACC,qBAAGD,MAAkBC,QAAQ,KAA7B,IACI,qBAAGD,MAAkBE,OAAOC,WAA5B,IACG,qBAAGH,MAAkBI,MAAMC,MAA3B,IACH,qBAAGL,MAAkBM,QAAQC,SAA7B,IAEL,qBAAGP,MAAkBE,OAAOM,WAA5B,IAEM,qBAAGR,MAAkBS,MAAMC,OAA3B,IAUS,qBAAGV,MAAkBW,YAAYD,OAAjC,IAWtB,kBACY,YADZ,EAAGE,UAEHC,EAAAA,EAAAA,IADA,oDAEgB,qBAAGb,MAAkBE,OAAOC,WAA5B,GAHhB,IAOA,kBACY,cADZ,EAAGS,UAEHC,EAAAA,EAAAA,IADA,qHAEW,qBAAGb,MAAkBE,OAAOY,aAA5B,IACK,qBAAGd,MAAkBE,OAAOa,UAA5B,IACJ,qBAAGf,MAAkBgB,QAAQC,MAA7B,IACM,qBAAGjB,MAAkBE,OAAOgB,IAA5B,GANlB,IASI,kBACQ,UADR,EAAGN,UAEPC,EAAAA,EAAAA,IADA,mEAEW,qBAAGb,MAAkBC,QAAQ,KAA7B,IACC,qBAAGD,MAAkBC,QAAQ,IAA7B,GAJR,I,UC7CKkB,EAAS,SAAC,GAAoE,IAAD,IAAjEC,QAAAA,OAAiE,MAAvD,KAAuD,EAAjDC,EAAiD,EAAjDA,KAAiD,IAA3CC,KAAAA,OAA2C,MAApC,SAAoC,MAA1BV,QAAAA,OAA0B,MAAhB,UAAgB,EACxF,OACE,SAACb,EAAD,CAAcuB,KAAMA,EAAMF,QAASA,EAASR,QAASA,EAArD,SACGS,GAGN,C,oHCNYE,EAAWnD,EAAAA,GAAAA,IAAH,+MAWRoD,EAAcpD,EAAAA,GAAAA,IAAH,qbASL,qBAAG4B,MAAkBC,QAAQ,EAA7B,IAIN,qBAAGD,MAAkBC,QAAQ,IAA7B,IACK,qBAAGD,MAAkBC,QAAQ,IAA7B,IAQLwB,EAAiBrD,EAAAA,GAAAA,IAAH,oJAChB,qBAAG4B,MAAkBC,QAAQ,EAA7B,IACC,qBAAGD,MAAkBC,QAAQ,EAA7B,IAGH,qBAAGD,MAAkBC,QAAQ,EAA7B,IACE,qBAAGD,MAAkBC,QAAQ,EAA7B,IAMEyB,GAAetD,EAAAA,EAAAA,IAAOuD,EAAAA,IAAPvD,CAAH,mJACd,qBAAG4B,MAAkBC,QAAQ,IAA7B,IACC,qBAAGD,MAAkBC,QAAQ,IAA7B,I,oBCxCN2B,EAAiBC,SAASC,eAAe,SAElCC,EAAQ,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAC1BrD,GAAWC,EAAAA,EAAAA,OAEjBU,EAAAA,EAAAA,YAAU,WACR,IAAM2C,EAAkB,SAAAC,GACP,WAAXA,EAAEC,MACJxD,EAASqD,IAEZ,EAED,OADAI,OAAOC,iBAAiB,UAAWJ,GAC5B,WACLG,OAAOE,oBAAoB,UAAWL,EACvC,CACF,GAAE,CAACD,EAAcrD,IAWlB,OAAO4D,EAAAA,EAAAA,eACL,SAACjB,EAAD,CAAUH,QAXS,SAAAe,GACfA,EAAEM,gBAAkBN,EAAEO,QACxB9D,EAASqD,IAEZ,EAOC,UACE,UAACT,EAAD,YACE,SAACC,EAAD,CAAgBL,QAPG,WACvBxC,EAASqD,IACV,EAKK,UACE,SAACP,EAAD,MAEDM,OAGLJ,EAEH,C,+MC5CYe,EAAcvE,EAAAA,GAAAA,OAAH,ilBACb,qBAAG4B,MAAkBC,QAAQ,GAA7B,IACC,qBAAGD,MAAkBC,QAAQ,GAA7B,IACI,qBAAGD,MAAkBE,OAAOC,WAA5B,IASJ,qBAAGH,MAAkBC,QAAQ,EAA7B,IACD,qBAAGD,MAAkBC,QAAQ,EAA7B,IACe,qBAAGD,MAAkBW,YAAYD,OAAjC,IAaZ,qBAAGV,MAAkBC,QAAQ,GAA7B,IACD,qBAAGD,MAAkBC,QAAQ,GAA7B,IAIA2C,GAAUxE,EAAAA,EAAAA,IAAOyE,EAAAA,IAAPzE,CAAH,+FACT,qBAAG4B,MAAkBC,QAAQ,EAA7B,IACC,qBAAGD,MAAkBC,QAAQ,EAA7B,I,8BChCC6C,EAAc,WACzB,IAAMlE,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAAC8D,EAAD,CAAavB,QAJS,WACtBxC,GAASmE,EAAAA,EAAAA,MACV,EAEC,UACE,SAACH,EAAD,KAGL,E,wCCZYI,EAAyB5E,EAAAA,GAAAA,GAAH,iFAMtB6E,GAAqB7E,EAAAA,GAAAA,GAAH,+JAMJ,SAAA8E,GAAK,OAAIA,EAAMC,KAAV,IAGnBC,GAAyBhF,EAAAA,GAAAA,GAAH,kZAKlB,qBAAG4B,MAAkBqD,YAAYpC,MAAjC,IAgBJqC,GAA8BlF,EAAAA,GAAAA,EAAH,6CACvB,qBAAG4B,MAAkBqD,YAAYE,IAAjC,IAMJC,IAHUpF,EAAAA,GAAAA,KAAH,uCACT,SAAA8E,GAAK,OAAIA,EAAMC,KAAV,IAEY/E,EAAAA,GAAAA,IAAH,oJAQZqF,GAAQrF,EAAAA,GAAAA,MAAH,shBAoCLsF,IAJYtF,EAAAA,GAAAA,MAAH,2CAIGA,EAAAA,GAAAA,GAAH,4aAiBTuF,GAAcvF,EAAAA,GAAAA,GAAH,yGAOXwF,GAAWxF,EAAAA,GAAAA,GAAH,0hBACJ,qBAAG4B,MAAkBS,MAAMC,OAA3B,IACA,qBAAGV,MAAkBqD,YAAYpC,MAAjC,IAsBO,qBAAGjB,MAAkBE,OAAO2D,KAA5B,IAIXC,GAAQ1F,EAAAA,GAAAA,KAAH,uGAGD,qBAAG4B,MAAkBqD,YAAYE,IAAjC,IACN,SAAAL,GAAK,OAAIA,EAAMC,KAAV,IAGHY,GAAM3F,EAAAA,GAAAA,GAAH,uGAGC,qBAAG4B,MAAkBqD,YAAYE,IAAjC,IACN,SAAAL,GAAK,OAAIA,EAAMC,KAAV,IAEHa,GAAY5F,EAAAA,GAAAA,GAAH,iDAGT6F,GAAkB7F,EAAAA,GAAAA,GAAH,8OAaf8F,GAAuB9F,EAAAA,GAAAA,OAAH,koBAkBP,qBAAG4B,MAAkBW,YAAYD,OAAjC,IAabyD,GAAwB/F,EAAAA,GAAAA,OAAH,4rBAYvB,qBAAG4B,MAAkBE,OAAO2D,KAA5B,IAEe,qBAAG7D,MAAkBW,YAAYD,OAAjC,IAWb,qBAAGV,MAAkBE,OAAOM,WAA5B,IAYA4D,GAAqBhG,EAAAA,GAAAA,OAAH,uoBASL,qBAAG4B,MAAkBW,YAAYD,OAAjC,IA6Bb2D,KANiBjG,EAAAA,EAAAA,IAAOkG,EAAAA,IAAPlG,CAAH,4FAMHA,EAAAA,GAAAA,MAAH,oH,uDCnRRmG,GAAenG,EAAAA,GAAAA,IAAH,sBAEZoG,GAAiBpG,EAAAA,GAAAA,IAAH,8DAKdqG,GAAQrG,EAAAA,GAAAA,EAAH,6JASLsG,GAAgBtG,EAAAA,GAAAA,IAAH,qJ,IASFA,EAAAA,GAAAA,OAAH,sB,SCqBrB,GA/B+B,SAAC,GAAuB,IAArBuG,EAAoB,EAApBA,cAC1BC,GAAO1F,EAAAA,EAAAA,IAAY2F,GAAAA,IACnBjG,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAAC0F,GAAD,WACE,UAACC,GAAD,YACE,UAACC,GAAD,WAAQG,EAAKE,SAAS,+DACtB,UAACJ,GAAD,YACE,SAACvD,GAAA,EAAD,CACEG,KAAK,SACLF,QAAS,kBAAMxC,GAASmG,EAAAA,EAAAA,MAAf,EACT1D,KAAK,SACLT,QAAS,eAEX,SAACO,GAAA,EAAD,CAAQG,KAAK,SAASF,QAhBE,WAC9BxC,GAASoG,EAAAA,GAAAA,IAAoBL,IAAgBlF,MAAK,kBAAMb,GAASqG,EAAAA,GAAAA,MAAf,IAClDrG,GAASmG,EAAAA,EAAAA,MACV,EAa+D1D,KAAK,kBAKtE,E,WCvCY6D,GAAkB9G,EAAAA,GAAAA,IAAH,0XAoBf+G,IAAa/G,EAAAA,EAAAA,IAAOgH,GAAAA,IAAPhH,CAAH,0PAGb,qBAAG4B,MAAkBE,OAAOmF,IAA5B,IAaGC,GAAsBlH,EAAAA,GAAAA,IAAH,2PAenBmH,GAAgBnH,EAAAA,GAAAA,GAAH,wIASboH,GAAepH,EAAAA,GAAAA,EAAH,+ICtDZqH,GAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,MAAO,uBAClCC,GAAWF,EAAAA,EAAAA,eAAc,CAC7BC,MAAO,+CAEHE,GAAYH,EAAAA,EAAAA,eAAc,CAAEC,MAAO,wBAEzC,OACE,iCACE,UAACV,GAAD,YACE,SAACC,GAAD,KACA,UAACG,GAAD,YACE,SAACC,GAAD,UAAe,4BACdG,GAAYI,GACX,SAACN,GAAD,UAAc,oHAIZ,WAGPK,IACC,SAACL,GAAD,UAAc,sHAOrB,ECuND,GAjNqB,WACnB,OAA0DpG,EAAAA,EAAAA,UAAS,MAAnE,eAAO2G,EAAP,KAA8BC,EAA9B,KACMpH,GAAWC,EAAAA,EAAAA,MACXoH,GAAe/G,EAAAA,EAAAA,IAAYC,EAAAA,IAC3B+G,GAAahH,EAAAA,EAAAA,IAAYiH,EAAAA,IACzBC,GAAoBlH,EAAAA,EAAAA,IAAYmH,GAAAA,KAEtC9G,EAAAA,EAAAA,YAAU,WACRX,GAASqG,EAAAA,GAAAA,OACTrG,GAAS0H,EAAAA,GAAAA,MACV,GAAE,CAAC1H,IAEJ,IAAM2H,EAA0B,SAAA5B,GAC9BqB,EAAyBrB,GACzB/F,GAAS4H,EAAAA,EAAAA,MACV,EAEKC,GAAqB,OAAIR,GAAcS,MAAK,SAACC,EAAGC,GACpD,OACEC,EAAAA,GAAAA,GAAeD,EAAEE,kBAAmBD,EAAAA,GAAAA,GAAeF,EAAEG,gBAExD,IAEKC,EAAkB,SAAAC,GAEtBpI,GAASqI,EAAAA,EAAAA,IAAsBD,IAC/BpI,GAASsI,EAAAA,EAAAA,MACV,EAEKC,EAAa,SAAArI,GACjB,IAAMgI,EAAkB,IAAIM,KAAKtI,GAC3BuI,EAAMC,OAAOR,EAAgBS,WAAWC,SAAS,EAAG,KACpDC,EAAQH,OAAOR,EAAgBY,WAAa,GAAGF,SAAS,EAAG,KAC3DG,EAAOL,OAAOR,EAAgBc,eAAeC,OAAO,GAE1D,MAAM,GAAN,OAAUR,EAAV,YAAiBI,EAAjB,YAA0BE,EAC3B,EAED,OAAOlB,EAAmBqB,QACxB,iCACE,SAAC,IAAD,CAAYC,SAAU,IAAtB,UACE,SAAC/E,EAAD,UACGyD,EAAmBuB,KAAI,SAAA/I,GAAgB,IAAD,IACrC,OACE,yBACE,UAACgE,GAAD,CACEE,MAA4B,WAArBlE,EAAYqC,KAAoB,UAAY,UADrD,WAGE,UAAC8B,GAAD,YACE,SAACE,GAAD,UAA6B,UAG7B,2BACE,0BACG6D,EAAWC,KAAKnI,EAAY6H,0BAInC,UAAC1D,GAAD,YACE,SAACE,GAAD,UAA6B,UAG7B,oCAAOrE,EAAYqC,YAAnB,QAA2B,UAE7B,UAAC8B,GAAD,YACE,SAACE,GAAD,UAA6B,cAG7B,oCAEI4C,EAAW+B,MACT,SAAAC,GAAG,OAAIA,EAAIC,KAAOlJ,EAAYmJ,UAA3B,WAHT,aAEI,EAEGC,WAIT,UAACjF,GAAD,YACE,SAACE,GAAD,UAA6B,aAG7B,0BAAOrE,EAAYqJ,cAErB,UAAClF,GAAD,YACE,SAACE,GAAD,UAA6B,SAG7B,SAACQ,GAAD,CACEX,MACuB,WAArBlE,EAAYqC,KAAoB,UAAY,UAFhD,SAMGrC,EAAYsJ,OAAS,EAClBtJ,EAAYsJ,QACU,EAAtBtJ,EAAYsJ,aAGpB,UAACnF,GAAD,YACE,SAACc,GAAD,CACE5C,KAAK,SACLF,QAAS,kBAAMmF,EAAwBtH,EAAYkJ,GAA1C,EAFX,SAGC,WAGA/B,IACC,SAACrE,GAAA,EAAD,CAAOE,aAAc8C,EAAAA,GAArB,UACE,SAAC,GAAD,CACEJ,cAAeoB,OAIrB,UAAC5B,GAAD,CACE7C,KAAK,SACLF,QAAS,kBAAM2F,EAAgB9H,EAAtB,EAFX,WAIG,SAAC,MAAD,IAAgB,kBAvEhBA,EAAYkJ,GA+ExB,SAIL,SAAC,IAAD,CAAYK,SAAU,IAAtB,UACE,UAAChF,GAAD,YACE,SAACa,GAAD,WACE,4BACE,UAACX,GAAD,YACE,SAACC,GAAD,UAAa,UACb,SAACA,GAAD,UAAa,UACb,SAACA,GAAD,UAAa,cACb,SAACA,GAAD,UAAa,aACb,SAACA,GAAD,UAAa,gBAInB,SAACF,GAAD,WACE,2BACGgD,EAAmBuB,KAAI,SAAA/I,GAAgB,IAAD,EACrC,OACE,UAAC2E,GAAD,YACE,SAACI,GAAD,UACGmD,EAAWC,KAAKnI,EAAY6H,qBAE/B,SAAC9C,GAAD,UACwB,WAArB/E,EAAYqC,KAAoB,IAAM,OAEzC,SAAC0C,GAAD,oBAEIkC,EAAW+B,MACT,SAAAC,GAAG,OAAIA,EAAIC,KAAOlJ,EAAYmJ,UAA3B,WAHT,aAEI,EAEGC,QAOP,SAACrE,GAAD,UAAY/E,EAAYqJ,WACxB,SAACvE,GAAD,CACEZ,MACuB,WAArBlE,EAAYqC,KAAoB,UAAY,UAFhD,SAKGrC,EAAYsJ,OAAS,EAClBtJ,EAAYsJ,QACU,EAAtBtJ,EAAYsJ,UAGlB,SAACtE,GAAD,WACE,SAACG,GAAD,CACE9C,KAAK,SACLF,QAAS,kBAAM2F,EAAgB9H,EAAtB,EAFX,UAIE,SAAC,MAAD,CAAawJ,KAAK,cAGtB,UAACxE,GAAD,YACE,SAACC,GAAD,CACE5C,KAAK,SACLF,QAAS,kBAAMmF,EAAwBtH,EAAYkJ,GAA1C,EAFX,SAGC,WAGA/B,IACC,SAACrE,GAAA,EAAD,CAAOE,aAAc8C,EAAAA,GAArB,UACE,SAAC,GAAD,CACEJ,cAAeoB,WA/CV9G,EAAYkJ,GAsD9B,iBAOX,SAAC1C,GAAD,GAEH,ECzPYiD,GAAkBtK,EAAAA,GAAAA,IAAH,+KCe5B,GAXiB,WACf,IAAMsH,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,MAAO,uBACxC,OACE,UAAC8C,GAAD,WACGhD,IAAY,SAAC/G,EAAA,EAAD,KACb,SAAC,GAAD,KACA,SAACmE,EAAD,MAGL,C,uJCfM,IAAM6F,EAAkC,SAAAC,GAAK,OAClDA,EAAMC,OAAOC,yBADqC,EAEvCC,EAA0B,SAAAH,GAAK,OAAIA,EAAMC,OAAOG,iBAAjB,EAE/BC,EAAmC,SAAAL,GAAK,OACnDA,EAAMC,OAAOK,0BADsC,EAExCC,EAAwB,SAAAP,GAAK,OAAIA,EAAMC,OAAOO,eAAjB,EAC7B/C,EAAqC,SAAAuC,GAAK,OACrDA,EAAMC,OAAOQ,4BADwC,C,gLCPhD,IAAMlK,EAAqB,SAAAyJ,GAAK,OAAIA,EAAM3J,YAAYgH,YAAtB,EAC1BE,EAAmB,SAAAyC,GAAK,OAAIA,EAAM3J,YAAYiH,UAAtB,EACxBoD,EAA0B,SAAAV,GAAK,OAC1CA,EAAM3J,YAAYsK,iBADwB,EAE/BC,EAAsB,SAAAZ,GAAK,OAAIA,EAAM3J,YAAYwK,aAAtB,EAC3BC,EAAuB,SAAAd,GAAK,OAAIA,EAAM3J,YAAY0K,cAAtB,EAC5BC,EAAoB,SAAAhB,GAAK,OAAIA,EAAM3J,YAAYW,WAAtB,C,8ECN/B,IAAMZ,EAAkB,WAC7B,MAAO,CACLyI,OAAO,IAAIL,MAAOM,WAAa,EAC/BC,MAAM,IAAIP,MAAOQ,cAEpB,EAEYf,EAAiB,SAAAgD,GAC5B,OAAOhK,OAAOgK,EAAQC,MAAM,KAAKC,KAAK,IACvC,C","sources":["components/Balance/Balance.styled.js","components/Balance/Balance.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/RoundButton/RondButton.styled.js","components/RoundButton/RoundButton.jsx","components/Transactions/Transactions.styled.js","components/ModalDeleteTransaction/ModalDeleteTransaction.styled.js","components/ModalDeleteTransaction/ModalDeleteTransaction.jsx","components/Greeting/Greeting.styled.js","components/Greeting/Greeting.jsx","components/Transactions/Transactions.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","redux/global/globalSelectors.js","redux/transaction/transactionSelectors.js","services/getDateNow.js"],"sourcesContent":["import styled from 'styled-components';\nimport { LiaHryvniaSolid } from 'react-icons/lia';\n\nexport const ContainerStyled = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 12px;\n  max-width: 280px;\n  padding: 8px 32px 12px 32px;\n  margin-bottom: 32px;\n\n  background: rgba(82, 59, 126, 0.6);\n  border-radius: 8px;\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n  backdrop-filter: blur(50px);\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 40px 12px 40px;\n    max-width: 100%;\n    height: 80px;\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    min-width: 100%;\n    border-radius: 0;\n  }\n`;\n\nexport const TitleStyled = styled.h3`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: normal;\n  text-transform: uppercase;\n  color: rgba(255, 255, 255, 0.4);\n`;\n\nexport const TextStyled = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const SpanStyled = styled.span`\n  font-size: 30px;\n  font-weight: 700;\n  line-height: normal;\n  color: ${({ total }) => (total < 0 ? '#FF868D' : '#98FB98')};\n`;\n\nexport const BalanceIcon = styled(LiaHryvniaSolid)`\n  width: 30px;\n  height: 30px;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSummaryThunk } from 'redux/transaction/transactionOperations';\nimport { selectTransactions } from 'redux/transaction/transactionSelectors';\nimport { getMonthAndYear } from 'services/getDateNow';\nimport {\n  BalanceIcon,\n  ContainerStyled,\n  SpanStyled,\n  TextStyled,\n  TitleStyled,\n} from './Balance.styled';\n\nexport const Balance = () => {\n  const dispatch = useDispatch();\n  const date = useRef(getMonthAndYear());\n  const transaction = useSelector(selectTransactions);\n  const [currentTotalBalance, setcurrentTotalBalance] = useState(0);\n\n  useEffect(() => {\n    dispatch(getSummaryThunk(date)).then(data =>\n      setcurrentTotalBalance(data.payload.periodTotal)\n    );\n  }, [dispatch, transaction]);\n\n  return (\n    <ContainerStyled>\n      <TitleStyled>Your balance</TitleStyled>\n      <TextStyled>\n        <BalanceIcon />\n        <SpanStyled total={currentTotalBalance}>\n          {Number(currentTotalBalance).toFixed(2)}\n        </SpanStyled>\n      </TextStyled>\n    </ContainerStyled>\n  );\n};\n","import styled, { css } from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  width: ${({ theme }) => theme.spacing(75)};\n  height: ${({ theme }) => theme.spacing(12.5)};\n  background: ${({ theme }) => theme.colors.btnGradient};\n  border-radius: ${({ theme }) => theme.radii.button};\n  box-shadow: ${({ theme }) => theme.shadows.secondary};\n\n  color: ${({ theme }) => theme.colors.primaryFont};\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 1.8px;\n  text-transform: uppercase;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  transition: transform ${({ theme }) => theme.transitions.regular};\n\n  &:focus,\n  &:hover {\n    border-radius: 18px;\n    border: 2px solid yellow;\n    transform: scale(1.01);\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n  }\n\n  /* Вариант \"primary\" */\n  ${({ variant }) =>\n    variant === 'primary' &&\n    css`\n      background: ${({ theme }) => theme.colors.btnGradient};\n    `}\n\n  /* Вариант \"secondary\" */\n  ${({ variant }) =>\n    variant === 'secondary' &&\n    css`\n      color: ${({ theme }) => theme.colors.btnVioletText};\n      background: ${({ theme }) => theme.colors.btnWhiteBg};\n      border: ${({ theme }) => theme.borders.normal};\n      border-color: ${({ theme }) => theme.colors.blue};\n    `}\n /* Вариант \"third\" */\n      ${({ variant }) =>\n    variant === 'third' &&\n    css`\n      width: ${({ theme }) => theme.spacing(17.5)};\n      height: ${({ theme }) => theme.spacing(7.5)};\n    `}\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled';\n\nexport const Button = ({ onClick = null, text, type = 'button', variant = 'primary' }) => {\n  return (\n    <ButtonStyled type={type} onClick={onClick} variant={variant}>\n      {text}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n};\n","import { VscClose } from 'react-icons/vsc';\nimport styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  background: rgba(34, 13, 91, 0.23);\n  backdrop-filter: blur(3.5px);\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  overscroll-behavior: contain;\n`;\n\nexport const ModalStyled = styled.div`\n  background: rgb(64, 46, 155);\n  background: radial-gradient(\n    circle,\n    rgba(64, 46, 155, 1) 5%,\n    rgba(76, 50, 113, 1) 100%\n  );\n  width: 100vw;\n  min-height: 110vh;\n  border-radius: ${({ theme }) => theme.spacing(2)};\n  padding: 40px 72px;\n\n  @media screen and (min-width: 768px) {\n    width: ${({ theme }) => theme.spacing(135)};\n    min-height: ${({ theme }) => theme.spacing(145)};\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const IconCloseModal = styled.div`\n  width: ${({ theme }) => theme.spacing(7)};\n  height: ${({ theme }) => theme.spacing(7)};\n\n  position: absolute;\n  top: ${({ theme }) => theme.spacing(5)};\n  right: ${({ theme }) => theme.spacing(5)};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const ExitModalBtn = styled(VscClose)`\n  width: ${({ theme }) => theme.spacing(7.4)};\n  height: ${({ theme }) => theme.spacing(7.4)};\n  &:hover {\n    border-radius: 50%;\n    border: 1px solid rgba(255, 255, 255, 0.4);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n  Backdrop,\n  ExitModalBtn,\n  IconCloseModal,\n  ModalStyled,\n} from './Modal.styled';\nimport { useEffect } from 'react';\nconst modalContainer = document.getElementById('modal');\n\nexport const Modal = ({ children, closeReducer }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const onCloseModalESC = e => {\n      if (e.code === 'Escape') {\n        dispatch(closeReducer());\n      }\n    };\n    window.addEventListener('keydown', onCloseModalESC);\n    return () => {\n      window.removeEventListener('keydown', onCloseModalESC);\n    };\n  }, [closeReducer, dispatch]);\n  const onCloseModal = e => {\n    if (e.currentTarget === e.target) {\n      dispatch(closeReducer());\n    }\n  };\n\n  const handleCloseModal = () => {\n    dispatch(closeReducer());\n  };\n\n  return createPortal(\n    <Backdrop onClick={onCloseModal}>\n      <ModalStyled>\n        <IconCloseModal onClick={handleCloseModal}>\n          <ExitModalBtn />\n        </IconCloseModal>\n        {children}\n      </ModalStyled>\n    </Backdrop>,\n    modalContainer\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  closeReducer: PropTypes.func.isRequired\n};\n","import { BsPlusLg } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nexport const RoundedWrap = styled.button`\n  width: ${({ theme }) => theme.spacing(11)};\n  height: ${({ theme }) => theme.spacing(11)};\n  background: ${({ theme }) => theme.colors.btnGradient};\n  color: currentColor;\n  border-radius: 50%;\n  border: none;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  bottom: ${({ theme }) => theme.spacing(5)};\n  right: ${({ theme }) => theme.spacing(5)};\n  transition: transform ${({ theme }) => theme.transitions.regular};\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border-radius: 50%;\n    border: 2px solid yellow;\n    cursor: pointer;\n    transform: scale(1.05);\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n  }\n\n  @media only screen and (min-width: 768px) {\n    bottom: ${({ theme }) => theme.spacing(10)};\n    right: ${({ theme }) => theme.spacing(10)};\n  }\n`;\n\nexport const PlusBtn = styled(BsPlusLg)`\n  width: ${({ theme }) => theme.spacing(6)};\n  height: ${({ theme }) => theme.spacing(6)};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { PlusBtn, RoundedWrap } from './RondButton.styled';\nimport { openModalAddTransaction } from 'redux/global/globalSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const RoundButton = () => {\n  const dispatch = useDispatch();\n  const handleOpenModal = () => {\n    dispatch(openModalAddTransaction());\n  };\n  return (\n    <RoundedWrap onClick={handleOpenModal}>\n      <PlusBtn />\n    </RoundedWrap>\n  );\n};\n","import styled from 'styled-components';\nimport { LiaPenSolid } from 'react-icons/lia';\n\nexport const AllTransactionsDetails = styled.ul`\n  list-style: none;\n  height: 75vh;\n  overflow: auto;\n`;\n\nexport const TransactionDetails = styled.ul`\n  margin-top: 8px;\n  border-radius: 10px;\n  width: 100%;\n  overflow: hidden;\n  margin-bottom: 8px;\n  border-left: 5px solid ${props => props.color};\n`;\n\nexport const TransactionDetailsItem = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  color: white;\n  font-weight: ${({ theme }) => theme.fontWeights.normal};\n  background: rgba(255, 255, 255, 0.07);\n  padding: 12px 20px;\n  font-size: 16px;\n\n  &:after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: rgba(255, 255, 255, 0.15);\n  }\n`;\n\nexport const TransactionDetailsItemTitle = styled.p`\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n\nexport const SumText = styled.span`\n  color: ${props => props.color};\n`;\nexport const TableWrapper = styled.div`\n  @media screen and (min-width: 1280px) {\n    padding-top: 46px;\n    padding-left: 70px;\n    padding-right: 16px;\n  }\n`;\n\nexport const Table = styled.table`\n  display: block;\n  width: 100%;\n  height: 356px;\n  overflow-y: auto;\n\n  @media screen and (min-width: 1280px) {\n    width: 715px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 6px;\n    opacity: 0.3;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: #734aef;\n    border-radius: 20px;\n    opacity: 0.3;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: #ff868d;\n    border-radius: 20px;\n    opacity: 0.3;\n  }\n  & tbody {\n    width: 100%;\n    height: 100%;\n    overflow-y: auto;\n  }\n`;\nexport const TableBody = styled.tbody`\n  display: block;\n`;\n\nexport const TableHead = styled.tr`\n  border-top: none;\n  display: grid;\n  grid-template-columns: 1.2fr 0.8fr 1.2fr 1.7fr 0.7fr 0.4fr 0.6fr;\n  width: 100%;\n  height: 56px;\n  color: #fbfbfb;\n  background-color: rgba(82, 59, 126, 1);\n  padding-left: 20px;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  border-radius: 8px;\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n  backdrop-filter: blur(500px);\n  overflow-y: auto;\n`;\n\nexport const TableHeader = styled.th`\n  font-weight: 700;\n  font-size: 16px;\n  color: #fbfbfb;\n  text-align: left;\n`;\n\nexport const TableRow = styled.tr`\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-weight: ${({ theme }) => theme.fontWeights.normal};\n  border-top: none;\n  font-size: 14px;\n  color: #fbfbfb;\n  text-align: left;\n  position: relative;\n  padding-left: 20px;\n  padding-right: 5px;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 2fr 0.9fr 1.8fr 1.5fr 1.5fr 0.8fr 1fr;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n\n  &:after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => theme.colors.white};\n  }\n`;\n\nexport const SumEl = styled.span`\n  border-top: none;\n  text-align: right;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  color: ${props => props.color};\n`;\n\nexport const Sum = styled.td`\n  border-top: none;\n  text-align: right;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  color: ${props => props.color};\n`;\nexport const TableDash = styled.td`\n  font-weight: inherit;\n`;\nexport const ButtonContainer = styled.td`\n  width: 100%;\n  display: flex;\n  padding-right: auto;\n  border-top: none;\n  text-align: right;\n  justify-content: center;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  gap: auto;\n`;\n\nexport const ButtonDelTransaction = styled.button`\n  text-align: center;\n  width: 69px;\n  height: 29px;\n  background: linear-gradient(\n    167deg,\n    #ffc727 0%,\n    #9e40ba 61.46%,\n    #7000ff 90.54%\n  );\n  font-size: 12px;\n  font-weight: 300;\n  border-radius: 18px;\n  border: none;\n  letter-spacing: 0.05em;\n  color: #fff;\n  box-shadow: 1px 9px 15px 0px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  transition: transform ${({ theme }) => theme.transitions.regular};\n\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    border-radius: 18px;\n    border: 2px solid yellow;\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n    transform: scale(1.03);\n    outline: none;\n  }\n`;\nexport const ButtonEditTransaction = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  text-align: center;\n  background: transparent;\n  font-size: 16px;\n  padding: 4px 12px;\n  border-radius: 18px;\n  border: none;\n  width: 69px;\n  height: 29px;\n  color: ${({ theme }) => theme.colors.white};\n  cursor: pointer;\n  transition: transform ${({ theme }) => theme.transitions.regular};\n\n  &:active,\n  &:focus,\n  &:hover {\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n    border-radius: 18px;\n    border: 2px solid yellow;\n    cursor: pointer;\n    transform: scale(1.05);\n    outline: none;\n    color: ${({ theme }) => theme.colors.primaryFont};\n  }\n  &:active svg,\n  &:focus svg,\n  &:hover svg {\n    cursor: pointer;\n    fill: #ff868d;\n    transform: scale(1.05);\n    outline: none;\n  }\n`;\n\nexport const BtnEditTransaction = styled.button`\n  background: transparent;\n  border: none;\n  width: 36px;\n  height: 36px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: transform ${({ theme }) => theme.transitions.regular};\n\n  &:active,\n  &:focus,\n  &:hover {\n    cursor: pointer;\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n    border-radius: 50%;\n    border: 1px solid #ffb627;\n    transform: scale(1.05);\n    outline: none;\n  }\n  &:active svg,\n  &:focus svg,\n  &:hover svg {\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n    cursor: pointer;\n    fill: #ff868d;\n    transform: scale(1.05);\n    outline: none;\n  }\n`;\n\nexport const StyledBiPencil = styled(LiaPenSolid)`\n  width: 14px;\n  height: 14px;\n  fill: rgba(255, 255, 255, 0.3);\n`;\n\nexport const TableTop = styled.table`\n  width: 708px;\n\n  @media only screen and (min-width: 1280px) {\n    width: 718px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalWrapper = styled.div``;\n\nexport const ModalContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Title = styled.p`\n  text-align: center;\n  font-size: 50px;\n  margin-top: 70px;\n  @media screen and (max-width: 425px) {\n    font-size: 24px;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n  margin-top: 90px;\n`;\n\nexport const CloseBtn = styled.button``;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'components/Button/Button';\nimport { closeModalDeleteTransaction } from 'redux/global/globalSlice';\nimport {\n  delTransactionThunk,\n  getAllTransactionsThunk,\n} from 'redux/transaction/transactionOperations';\nimport {\n  ButtonWrapper,\n  ModalContainer,\n  ModalWrapper,\n  Title,\n} from './ModalDeleteTransaction.styled';\nimport { selectUser } from 'redux/auth/authSelectors';\n\nconst ModalDeleteTransaction = ({ transactionId }) => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const handleDeleteTransaction = () => {\n    dispatch(delTransactionThunk(transactionId)).then(() => dispatch(getAllTransactionsThunk()));\n    dispatch(closeModalDeleteTransaction());\n  };\n\n  return (\n    <ModalWrapper>\n      <ModalContainer>\n        <Title>{user.username}, are you sure that you want to delete this transaction?</Title>\n        <ButtonWrapper>\n          <Button\n            type=\"button\"\n            onClick={() => dispatch(closeModalDeleteTransaction())}\n            text=\"Cancel\"\n            variant={'secondary'}\n          />\n          <Button type=\"button\" onClick={handleDeleteTransaction} text=\"Delete\" />\n        </ButtonWrapper>\n      </ModalContainer>\n    </ModalWrapper>\n  );\n};\n\nModalDeleteTransaction.propTypes = {\n  transactionId: PropTypes.string.isRequired,\n};\n\nexport default ModalDeleteTransaction;\n","import { FcMoneyTransfer } from 'react-icons/fc';\nimport styled from 'styled-components';\n\nexport const GreetingWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    padding: 20px;\n    gap: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    padding: 30px 50px;\n    max-width: 800px;\n  }\n`;\n\nexport const WalletIcon = styled(FcMoneyTransfer)`\n  width: 250px;\n  height: 250px;\n  fill: ${({ theme }) => theme.colors.pink};\n\n  @media screen and (min-width: 768px) {\n    width: 250px;\n    height: 250px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 350px;\n    height: 350px;\n  }\n`;\n\nexport const GreetingTextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    max-width: 370px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 700px;\n  }\n`;\n\nexport const GreetingTitle = styled.h1`\n  font-size: 40px;\n  color: #00ff5fd6;\n\n  @media screen and (min-width: 768px) {\n    font-size: 50px;\n  }\n`;\n\nexport const GreetingText = styled.p`\n  font-size: 25px;\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 20px;\n  }\n`;\n","import { useMediaQuery } from 'react-responsive';\nimport {\n  GreetingText,\n  GreetingTextWrapper,\n  GreetingTitle,\n  GreetingWrapper,\n  WalletIcon,\n} from './Greeting.styled';\n\nexport const Greeting = () => {\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px) and (max-width: 1279px)',\n  });\n  const isDesktop = useMediaQuery({ query: '(min-width: 1280px)' });\n\n  return (\n    <>\n      <GreetingWrapper>\n        <WalletIcon />\n        <GreetingTextWrapper>\n          <GreetingTitle>Welcome to Money Guard!</GreetingTitle>\n          {isMobile || isDesktop ? (\n            <GreetingText>\n              There is no transaction history yet. To add your first\n              transaction, click the button in the lower right corner.\n            </GreetingText>\n          ) : null}\n        </GreetingTextWrapper>\n      </GreetingWrapper>\n      {isTablet && (\n        <GreetingText>\n          There is no transaction history yet. To add your first transaction,\n          click the button in the lower right corner.\n        </GreetingText>\n      )}\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectCategories,\n  selectTransactions,\n} from 'redux/transaction/transactionSelectors';\nimport {\n  TransactionDetails,\n  TransactionDetailsItem,\n  TransactionDetailsItemTitle,\n  TableHead,\n  TableHeader,\n  Table,\n  TableRow,\n  Sum,\n  ButtonContainer,\n  ButtonEditTransaction,\n  BtnEditTransaction,\n  ButtonDelTransaction,\n  TableDash,\n  TableWrapper,\n  AllTransactionsDetails,\n  SumEl,\n  TableTop,\n} from './Transactions.styled';\n\nimport { useEffect, useState } from 'react';\nimport {\n  getTransactionsCategoriesThunk,\n  getAllTransactionsThunk,\n} from 'redux/transaction/transactionOperations';\nimport MediaQuery from 'react-responsive';\nimport {\n  closeModalDeleteTransaction,\n  openModalDeleteTransaction,\n  openModalEditTransaction,\n  setUpdatedTransaction,\n} from 'redux/global/globalSlice';\nimport { LiaPenSolid } from 'react-icons/lia';\nimport { getDateForSort } from 'services/getDateNow';\nimport { selectIsModalDeleteTransactionOpen } from 'redux/global/globalSelectors';\nimport { Modal } from 'components/Modal/Modal';\nimport ModalDeleteTransaction from 'components/ModalDeleteTransaction/ModalDeleteTransaction';\nimport { Greeting } from 'components/Greeting/Greeting';\n\nconst Transactions = () => {\n  const [transactionIdToDelete, setTransactionIdToDelete] = useState(null);\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTransactions);\n  const categories = useSelector(selectCategories);\n  const isDeleteModalOpen = useSelector(selectIsModalDeleteTransactionOpen);\n\n  useEffect(() => {\n    dispatch(getAllTransactionsThunk());\n    dispatch(getTransactionsCategoriesThunk());\n  }, [dispatch]);\n\n  const handleDeleteButtonClick = transactionId => {\n    setTransactionIdToDelete(transactionId);\n    dispatch(openModalDeleteTransaction());\n  };\n\n  const sortedTransactions = [...transactions].sort((a, b) => {\n    return (\n      getDateForSort(b.transactionDate) - getDateForSort(a.transactionDate)\n    );\n  });\n\n  const handleEditClick = obj => {\n    // dispatch(openModalEditTransaction(object));\n    dispatch(setUpdatedTransaction(obj));\n    dispatch(openModalEditTransaction());\n  }; // wait till adding real data will be able to addd and if there are bugs, fix them\n\n  const formatDate = date => {\n    const transactionDate = new Date(date);\n    const day = String(transactionDate.getDate()).padStart(2, '0');\n    const month = String(transactionDate.getMonth() + 1).padStart(2, '0');\n    const year = String(transactionDate.getFullYear()).slice(-2);\n\n    return `${day}.${month}.${year}`;\n  };\n\n  return sortedTransactions.length ? (\n    <>\n      <MediaQuery maxWidth={767}>\n        <AllTransactionsDetails>\n          {sortedTransactions.map(transaction => {\n            return (\n              <li key={transaction.id}>\n                <TransactionDetails\n                  color={transaction.type === 'INCOME' ? '#FFB627' : '#FF868D'}\n                >\n                  <TransactionDetailsItem>\n                    <TransactionDetailsItemTitle>\n                      Date\n                    </TransactionDetailsItemTitle>\n                    <span>\n                      <span>\n                        {formatDate(Date(transaction.transactionDate))}\n                      </span>\n                    </span>\n                  </TransactionDetailsItem>\n                  <TransactionDetailsItem>\n                    <TransactionDetailsItemTitle>\n                      Type\n                    </TransactionDetailsItemTitle>\n                    <span>{transaction.type ?? '-'}</span>\n                  </TransactionDetailsItem>\n                  <TransactionDetailsItem>\n                    <TransactionDetailsItemTitle>\n                      Category\n                    </TransactionDetailsItemTitle>\n                    <span>\n                      {\n                        categories.find(\n                          cat => cat.id === transaction.categoryId\n                        )?.name\n                      }\n                    </span>\n                  </TransactionDetailsItem>\n                  <TransactionDetailsItem>\n                    <TransactionDetailsItemTitle>\n                      Comment\n                    </TransactionDetailsItemTitle>\n                    <span>{transaction.comment}</span>\n                  </TransactionDetailsItem>\n                  <TransactionDetailsItem>\n                    <TransactionDetailsItemTitle>\n                      Sum\n                    </TransactionDetailsItemTitle>\n                    <SumEl\n                      color={\n                        transaction.type === 'INCOME' ? '#FFB627' : '#FF868D'\n                      }\n                      // make this check work and add normal styles\n                    >\n                      {transaction.amount > 0\n                        ? transaction.amount\n                        : transaction.amount * -1}\n                    </SumEl>\n                  </TransactionDetailsItem>\n                  <TransactionDetailsItem>\n                    <ButtonDelTransaction\n                      type=\"button\"\n                      onClick={() => handleDeleteButtonClick(transaction.id)}\n                    >\n                      Delete\n                    </ButtonDelTransaction>\n                    {isDeleteModalOpen && (\n                      <Modal closeReducer={closeModalDeleteTransaction}>\n                        <ModalDeleteTransaction\n                          transactionId={transactionIdToDelete}\n                        />\n                      </Modal>\n                    )}\n                    <ButtonEditTransaction\n                      type=\"button\"\n                      onClick={() => handleEditClick(transaction)}\n                    >\n                      {<LiaPenSolid />} Edit\n                    </ButtonEditTransaction>\n\n                    {/* fix color of edit btn */}\n                  </TransactionDetailsItem>\n                </TransactionDetails>\n              </li>\n            );\n          })}\n        </AllTransactionsDetails>\n      </MediaQuery>\n\n      <MediaQuery minWidth={768}>\n        <TableWrapper>\n          <TableTop>\n            <thead>\n              <TableHead>\n                <TableHeader>Date</TableHeader>\n                <TableHeader>Type</TableHeader>\n                <TableHeader>Category</TableHeader>\n                <TableHeader>Comment</TableHeader>\n                <TableHeader>Sum</TableHeader>\n              </TableHead>\n            </thead>\n          </TableTop>\n          <Table>\n            <tbody>\n              {sortedTransactions.map(transaction => {\n                return (\n                  <TableRow key={transaction.id}>\n                    <TableDash>\n                      {formatDate(Date(transaction.transactionDate))}\n                    </TableDash>\n                    <TableDash>\n                      {transaction.type === 'INCOME' ? '+' : '-'}\n                    </TableDash>\n                    <TableDash>\n                      {\n                        categories.find(\n                          cat => cat.id === transaction.categoryId\n                        )?.name\n\n                        // transaction.category\n                        //   ? transaction.category?.name\n                        //   : 'Income'\n                      }\n                    </TableDash>\n                    <TableDash>{transaction.comment}</TableDash>\n                    <Sum\n                      color={\n                        transaction.type === 'INCOME' ? '#FFB627' : '#FF868D'\n                      }\n                    >\n                      {transaction.amount > 0\n                        ? transaction.amount\n                        : transaction.amount * -1}\n                    </Sum>\n                    {/* <TableDash> */}\n                    <ButtonContainer>\n                      <BtnEditTransaction\n                        type=\"button\"\n                        onClick={() => handleEditClick(transaction)}\n                      >\n                        <LiaPenSolid fill=\"#fff\" />\n                      </BtnEditTransaction>\n                    </ButtonContainer>\n                    <ButtonContainer>\n                      <ButtonDelTransaction\n                        type=\"button\"\n                        onClick={() => handleDeleteButtonClick(transaction.id)}\n                      >\n                        Delete\n                      </ButtonDelTransaction>\n                      {isDeleteModalOpen && (\n                        <Modal closeReducer={closeModalDeleteTransaction}>\n                          <ModalDeleteTransaction\n                            transactionId={transactionIdToDelete}\n                          />\n                        </Modal>\n                      )}\n                    </ButtonContainer>\n                  </TableRow>\n                );\n              })}\n            </tbody>\n          </Table>\n        </TableWrapper>\n      </MediaQuery>\n    </>\n  ) : (\n    <Greeting />\n  );\n};\n\nexport default Transactions;\n","import styled from 'styled-components';\n\nexport const HomePageWrapper = styled.div`\n  @media only screen and (max-width: 767px) {\n    overflow: auto;\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-bottom: 20px;\n  }\n`;\n","import { useMediaQuery } from 'react-responsive';\nimport { Balance } from 'components/Balance/Balance';\nimport { RoundButton } from 'components/RoundButton/RoundButton';\nimport Transactions from 'components/Transactions/Transactions';\nimport { HomePageWrapper } from './HomePage.styled';\n\nconst HomePage = () => {\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n  return (\n    <HomePageWrapper>\n      {isMobile && <Balance />}\n      <Transactions />\n      <RoundButton />\n    </HomePageWrapper>\n  );\n};\n\nexport default HomePage;\n","export const selectIsModalAddTransactionOpen = state =>\n  state.global.isModalAddTransactionOpen;\nexport const selectIsModalLogoutOpen = state => state.global.isModalLogoutOpen;\nexport const selectIsLoadingGlobal = state => state.global.isLoading;\nexport const selectIsModalEditTransactionOpen = state =>\n  state.global.isModalEditTransactionOpen;\nexport const selectEditTransaction = state => state.global.editTransaction;\nexport const selectIsModalDeleteTransactionOpen = state =>\n  state.global.isModalDeleteTransactionOpen;\n","export const selectTransactions = state => state.transaction.transactions;\nexport const selectCategories = state => state.transaction.categories;\nexport const selectCategoriesSummary = state =>\n  state.transaction.categoriesSummary;\nexport const selectIncomeSummary = state => state.transaction.incomeSummary;\nexport const selectExpenseSummary = state => state.transaction.expenseSummary;\nexport const selectPeriodTotal = state => state.transaction.periodTotal;\nexport const selectIsLoading = state => state.transaction.isLoading;\n","export const getMonthAndYear = () => {\n  return {\n    month: new Date().getMonth() + 1,\n    year: new Date().getFullYear(),\n  };\n};\n\nexport const getDateForSort = isoDate => {\n  return Number(isoDate.split('-').join(''));\n};\n"],"names":["ContainerStyled","styled","TitleStyled","TextStyled","SpanStyled","total","BalanceIcon","LiaHryvniaSolid","Balance","dispatch","useDispatch","date","useRef","getMonthAndYear","transaction","useSelector","selectTransactions","useState","currentTotalBalance","setcurrentTotalBalance","useEffect","getSummaryThunk","then","data","payload","periodTotal","Number","toFixed","ButtonStyled","theme","spacing","colors","btnGradient","radii","button","shadows","secondary","primaryFont","fonts","regular","transitions","variant","css","btnVioletText","btnWhiteBg","borders","normal","blue","Button","onClick","text","type","Backdrop","ModalStyled","IconCloseModal","ExitModalBtn","VscClose","modalContainer","document","getElementById","Modal","children","closeReducer","onCloseModalESC","e","code","window","addEventListener","removeEventListener","createPortal","currentTarget","target","RoundedWrap","PlusBtn","BsPlusLg","RoundButton","openModalAddTransaction","AllTransactionsDetails","TransactionDetails","props","color","TransactionDetailsItem","fontWeights","TransactionDetailsItemTitle","bold","TableWrapper","Table","TableHead","TableHeader","TableRow","white","SumEl","Sum","TableDash","ButtonContainer","ButtonDelTransaction","ButtonEditTransaction","BtnEditTransaction","TableTop","LiaPenSolid","ModalWrapper","ModalContainer","Title","ButtonWrapper","transactionId","user","selectUser","username","closeModalDeleteTransaction","delTransactionThunk","getAllTransactionsThunk","GreetingWrapper","WalletIcon","FcMoneyTransfer","pink","GreetingTextWrapper","GreetingTitle","GreetingText","Greeting","isMobile","useMediaQuery","query","isTablet","isDesktop","transactionIdToDelete","setTransactionIdToDelete","transactions","categories","selectCategories","isDeleteModalOpen","selectIsModalDeleteTransactionOpen","getTransactionsCategoriesThunk","handleDeleteButtonClick","openModalDeleteTransaction","sortedTransactions","sort","a","b","getDateForSort","transactionDate","handleEditClick","obj","setUpdatedTransaction","openModalEditTransaction","formatDate","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","slice","length","maxWidth","map","find","cat","id","categoryId","name","comment","amount","minWidth","fill","HomePageWrapper","selectIsModalAddTransactionOpen","state","global","isModalAddTransactionOpen","selectIsModalLogoutOpen","isModalLogoutOpen","selectIsModalEditTransactionOpen","isModalEditTransactionOpen","selectEditTransaction","editTransaction","isModalDeleteTransactionOpen","selectCategoriesSummary","categoriesSummary","selectIncomeSummary","incomeSummary","selectExpenseSummary","expenseSummary","selectPeriodTotal","isoDate","split","join"],"sourceRoot":""}