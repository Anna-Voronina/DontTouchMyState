{"version":3,"file":"static/js/63.8a231131.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.js","components/Balance/Balance.jsx","components/RoundButton/RondButton.styled.js","components/RoundButton/RoundButton.jsx","components/Transactions/Transactions.styled.js","components/Transactions/Transactions.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","redux/transaction/transactionSelectors.js","services/getDateNow.js"],"sourcesContent":["import styled from 'styled-components';\nimport { LiaHryvniaSolid } from 'react-icons/lia';\n\nexport const ContainerStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 12px;\n  max-width: 280px;\n  padding: 8px 32px 12px 32px;\n  margin-bottom: 32px;\n\n  background: rgba(82, 59, 126, 0.6);\n  border-radius: 8px;\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n  backdrop-filter: blur(50px);\n\n  @media screen and (min-width: 768px) {\n    padding: 8px 40px 12px 40px;\n    max-width: 100%;\n    height: 80px;\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    min-width: 100%;\n    border-radius: 0;\n  }\n`;\n\nexport const TitleStyled = styled.h3`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: normal;\n  text-transform: uppercase;\n  color: rgba(255, 255, 255, 0.4);\n`;\n\nexport const TextStyled = styled.p`\n  display: flex;\n  align-items: center;\n`;\n\nexport const SpanStyled = styled.span`\n  font-size: 30px;\n  font-weight: 700;\n  line-height: normal;\n  color: ${({ total }) => (total < 0 ? '#FF868D' : '#98FB98')};\n`;\n\nexport const BalanceIcon = styled(LiaHryvniaSolid)`\n  width: 30px;\n  height: 30px;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSummaryThunk } from 'redux/transaction/transactionOperations';\nimport { selectTransactions } from 'redux/transaction/transactionSelectors';\nimport { getMonthAndYear } from 'services/getDateNow';\nimport {\n  BalanceIcon,\n  ContainerStyled,\n  SpanStyled,\n  TextStyled,\n  TitleStyled,\n} from './Balance.styled';\n\nexport const Balance = () => {\n  const dispatch = useDispatch();\n  const date = useRef(getMonthAndYear());\n  const transaction = useSelector(selectTransactions);\n  const [currentTotalBalance, setcurrentTotalBalance] = useState();\n\n  useEffect(() => {\n    dispatch(getSummaryThunk(date)).then(data =>\n      setcurrentTotalBalance(data.payload.periodTotal)\n    );\n  }, [dispatch, transaction]);\n\n  return (\n    <ContainerStyled>\n      <TitleStyled>Your balance</TitleStyled>\n      <TextStyled>\n        <BalanceIcon />\n        <SpanStyled total={currentTotalBalance}>\n          {Number(currentTotalBalance).toFixed(2)}\n        </SpanStyled>\n      </TextStyled>\n    </ContainerStyled>\n  );\n};\n","import { BsPlusLg } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nexport const RoundedWrap = styled.div`\n  width: ${({ theme }) => theme.spacing(11)};\n  height: ${({ theme }) => theme.spacing(11)};\n  background: ${({ theme }) => theme.colors.btnGradient};\n  border-radius: 50%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  bottom: ${({ theme }) => theme.spacing(5)};\n  right: ${({ theme }) => theme.spacing(5)};\n  &:hover {\n    cursor: pointer;\n  }\n\n  @media only screen and (min-width: 768px) {\n    bottom: ${({ theme }) => theme.spacing(10)};\n    right: ${({ theme }) => theme.spacing(10)};\n  }\n`;\n\nexport const PlusBtn = styled(BsPlusLg)`\n  width: ${({ theme }) => theme.spacing(6)};\n  height: ${({ theme }) => theme.spacing(6)};\n`;\n","import React from 'react';\nimport { PlusBtn, RoundedWrap } from './RondButton.styled';\nimport { openModalAddTransaction } from 'redux/global/globalSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const RoundButton = () => {\n  const dispatch = useDispatch();\n  const handleOpenModal = () => {\n    dispatch(openModalAddTransaction());\n  };\n  return (\n    <RoundedWrap onClick={handleOpenModal}>\n      <PlusBtn />\n    </RoundedWrap>\n  );\n};\n","import styled from 'styled-components';\nimport { LiaPenSolid } from 'react-icons/lia';\n\nexport const AllTransactionsDetails = styled.ul`\n  list-style: none;\n`;\n\nexport const TransactionDetails = styled.ul`\n  margin-top: 8px;\n  border-radius: 10px;\n  width: 100%;\n  overflow: hidden;\n  margin-bottom: 8px;\n  border-left: 5px solid ${props => props.color};\n`;\n\nexport const TransactionDetailsItem = styled.li`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  color: white;\n  font-weight: ${({ theme }) => theme.fontWeights.normal};\n  background: rgba(255, 255, 255, 0.07);\n  padding: 12px 20px;\n  font-size: 16px;\n\n  &:after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: rgba(255, 255, 255, 0.15);\n  }\n`;\n\nexport const TransactionDetailsItemTitle = styled.p`\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n`;\n\nexport const SumText = styled.span`\n  color: ${props => props.color};\n`;\nexport const TableWrapper = styled.div`\n  @media screen and (min-width: 1280px) {\n    padding-top: 46px;\n    padding-left: 70px;\n    padding-right: 16px;\n  }\n`;\n\nexport const Table = styled.table`\n  display: block;\n  width: 100%;\n  height: 422px;\n  overflow-y: auto;\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 46px;\n    width: 715px;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    margin-top: 20px;\n  }\n`;\nexport const TableBody = styled.tbody`\n  display: block;\n`;\n\nexport const TableHead = styled.tr`\n  border-top: none;\n  display: grid;\n  grid-template-columns: 1.2fr 0.8fr 1.2fr 1.7fr 0.7fr 0.4fr 0.6fr;\n  width: 100%;\n  height: 56px;\n  color: #fbfbfb;\n  background-color: rgba(82, 59, 126, 0.6);\n  padding-left: 20px;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  border-radius: 8px;\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n  backdrop-filter: blur(50px);\n`;\n\nexport const TableHeader = styled.th`\n  font-weight: 700;\n  font-size: 16px;\n  color: #fbfbfb;\n  text-align: left;\n`;\n\nexport const TableRow = styled.tr`\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-weight: ${({ theme }) => theme.fontWeights.normal};\n  border-top: none;\n  font-size: 14px;\n  color: #fbfbfb;\n  text-align: left;\n  position: relative;\n  padding-left: 20px;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 2fr 0.9fr 1.8fr 1.5fr 1.5fr 0.8fr 1fr;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n\n  &:after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    content: '';\n    width: 100%;\n    height: 1px;\n    background-color: #b8bbc2;\n  }\n`;\n\nexport const SumEl = styled.span`\n  border-top: none;\n  text-align: right;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  color: ${props => props.color};\n`;\n\nexport const Sum = styled.td`\n  border-top: none;\n  text-align: right;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  color: ${props => props.color};\n`;\nexport const TableDash = styled.td`\n  font-weight: inherit;\n`;\nexport const ButtonContainer = styled.td`\n  width: 100%;\n  display: flex;\n  padding-right: auto;\n  border-top: none;\n  text-align: right;\n  justify-content: center;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  gap: auto;\n`;\n\nexport const ButtonDelTransaction = styled.button`\n  text-align: center;\n  width: 69px;\n  height: 29px;\n  background: linear-gradient(\n    167deg,\n    #ffc727 0%,\n    #9e40ba 61.46%,\n    #7000ff 90.54%\n  );\n  font-size: 12px;\n  font-weight: 300;\n  border-radius: 18px;\n  border: none;\n  letter-spacing: 0.05em;\n  color: #fff;\n  box-shadow: 1px 9px 15px 0px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  transition: 0.2s;\n  &:active,\n  &:focus,\n  &:hover {\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n  }\n`;\nexport const ButtonEditTransaction = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  text-align: center;\n  background: transparent;\n  font-size: 16px;\n  padding: 4px 12px;\n  border-radius: 18px;\n  border: none;\n  width: 69px;\n  height: 29px;\n  color: ${({ theme }) => theme.colors.white};\n  cursor: pointer;\n  transition: 0.2s;\n\n  &:active,\n  &:focus,\n  &:hover {\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const BtnEditTransaction = styled.button`\n  background: transparent;\n  border-radius: 50%;\n  border: none;\n  width: 36px;\n  height: 36px;\n  cursor: pointer;\n  transition: 0.2s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:active,\n  &:focus,\n  &:hover {\n    box-shadow: 1px 5px 8px 0px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const StyledBiPencil = styled(LiaPenSolid)`\n  width: 14px;\n  height: 14px;\n  stroke: rgba(255, 255, 255, 0.6);\n`;\n\nexport const NoTransactions = styled.div`\n  display: block;\n  font-size: 16px;\n  font-weight: 700;\n  color: #fbfbfb;\n  text-align: center;\n  padding-top: 40px;\n  padding-bottom: 40px;\n  max-width: 200px;\n  margin: 0 auto;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectCategories,\n  selectTransactions,\n} from 'redux/transaction/transactionSelectors';\nimport {\n  TransactionDetails,\n  TransactionDetailsItem,\n  TransactionDetailsItemTitle,\n  TableHead,\n  TableHeader,\n  Table,\n  TableRow,\n  Sum,\n  ButtonContainer,\n  ButtonEditTransaction,\n  BtnEditTransaction,\n  ButtonDelTransaction,\n  NoTransactions,\n  TableDash,\n  TableWrapper,\n  AllTransactionsDetails,\n  SumEl,\n} from './Transactions.styled';\n// import { formatMoney } from 'utils/formatMoney';\n\nimport { useEffect } from 'react';\nimport {\n  getTransactionsCategoriesThunk,\n  getAllTransactionsThunk,\n  delTransactionThunk,\n} from 'redux/transaction/transactionOperations';\nimport MediaQuery from 'react-responsive';\nimport {\n  openModalEditTransaction,\n  setUpdatedTransaction,\n} from 'redux/global/globalSlice';\nimport { LiaPenSolid } from 'react-icons/lia';\nimport { getDateForSort } from 'services/getDateNow';\n\nconst Transactions = () => {\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTransactions);\n  const categories = useSelector(selectCategories);\n\n  useEffect(() => {\n    dispatch(getAllTransactionsThunk());\n    dispatch(getTransactionsCategoriesThunk());\n  }, [dispatch]);\n\n  const sortedTransactions = [...transactions].sort((a, b) => {\n    return (\n      getDateForSort(b.transactionDate) - getDateForSort(a.transactionDate)\n    );\n  });\n\n  const handleEditClick = obj => {\n    // dispatch(openModalEditTransaction(object));\n    dispatch(setUpdatedTransaction(obj));\n    dispatch(openModalEditTransaction());\n  }; // wait till adding real data will be able to addd and if there are bugs, fix them\n\n  const handleDeleteTransaction = id => {\n    dispatch(delTransactionThunk(id)).then(dispatch(getAllTransactionsThunk()));\n    // dispatch(getAllTransactionsThunk());\n  }; // wait till adding real data will be able to addd and if there are bugs, fix them\n  const formatDate = date => {\n    const dateArr = date.split('-');\n    const [year, month, day] = dateArr;\n    return `${day}.${month}.${year}`;\n  };\n\n  return sortedTransactions.length ? (\n    <>\n      <MediaQuery maxWidth={767}>\n        <AllTransactionsDetails>\n          {sortedTransactions.map(transaction => {\n            return (\n              <li key={transaction.id}>\n                <TransactionDetails\n                  color={transaction.type === 'INCOME' ? '#FFB627' : '#FF868D'}\n                >\n                  <TransactionDetailsItem>\n                    <TransactionDetailsItemTitle>\n                      Date\n                    </TransactionDetailsItemTitle>\n                    <span>{formatDate(transaction.transactionDate)}</span>\n                  </TransactionDetailsItem>\n                  <TransactionDetailsItem>\n                    <TransactionDetailsItemTitle>\n                      Type\n                    </TransactionDetailsItemTitle>\n                    <span>{transaction.type ?? '-'}</span>\n                  </TransactionDetailsItem>\n                  <TransactionDetailsItem>\n                    <TransactionDetailsItemTitle>\n                      Category\n                    </TransactionDetailsItemTitle>\n                    <span>\n                      {\n                        categories.find(\n                          cat => cat.id === transaction.categoryId\n                        )?.name\n                      }\n                    </span>\n                  </TransactionDetailsItem>\n                  <TransactionDetailsItem>\n                    <TransactionDetailsItemTitle>\n                      Comment\n                    </TransactionDetailsItemTitle>\n                    <span>{transaction.comment}</span>\n                  </TransactionDetailsItem>\n                  <TransactionDetailsItem>\n                    <TransactionDetailsItemTitle>\n                      Sum\n                    </TransactionDetailsItemTitle>\n                    <SumEl\n                      color={\n                        transaction.type === 'INCOME' ? '#FFB627' : '#FF868D'\n                      }\n                      // make this check work and add normal styles\n                    >\n                      {transaction.amount > 0\n                        ? transaction.amount\n                        : transaction.amount * -1}\n                    </SumEl>\n                  </TransactionDetailsItem>\n                  <TransactionDetailsItem>\n                    <ButtonDelTransaction\n                      type=\"button\"\n                      onClick={() => handleDeleteTransaction(transaction.id)}\n                    >\n                      Delete\n                    </ButtonDelTransaction>\n                    <ButtonEditTransaction\n                      type=\"button\"\n                      onClick={() => handleEditClick(transaction)}\n                    >\n                      {<LiaPenSolid />} Edit\n                    </ButtonEditTransaction>\n\n                    {/* fix color of edit btn */}\n                  </TransactionDetailsItem>\n                </TransactionDetails>\n              </li>\n            );\n          })}\n        </AllTransactionsDetails>\n      </MediaQuery>\n\n      <MediaQuery minWidth={768}>\n        <TableWrapper>\n          <Table>\n            <thead>\n              <TableHead>\n                <TableHeader>Date</TableHeader>\n                <TableHeader>Type</TableHeader>\n                <TableHeader>Category</TableHeader>\n                <TableHeader>Comment</TableHeader>\n                <TableHeader>Sum</TableHeader>\n              </TableHead>\n            </thead>\n\n            <tbody>\n              {sortedTransactions.map(transaction => {\n                return (\n                  <TableRow key={transaction.id}>\n                    <TableDash>\n                      {formatDate(transaction.transactionDate)}\n                    </TableDash>\n                    <TableDash>\n                      {transaction.type === 'INCOME' ? '+' : '-'}\n                    </TableDash>\n                    <TableDash>\n                      {\n                        categories.find(\n                          cat => cat.id === transaction.categoryId\n                        )?.name\n\n                        // transaction.category\n                        //   ? transaction.category?.name\n                        //   : 'Income'\n                      }\n                    </TableDash>\n                    <TableDash>{transaction.comment}</TableDash>\n                    <Sum\n                      color={\n                        transaction.type === 'INCOME' ? '#FFB627' : '#FF868D'\n                      }\n                    >\n                      {transaction.amount > 0\n                        ? transaction.amount\n                        : transaction.amount * -1}\n                    </Sum>\n                    {/* <TableDash> */}\n                    <ButtonContainer>\n                      <BtnEditTransaction\n                        type=\"button\"\n                        onClick={() => handleEditClick(transaction)}\n                      >\n                        <LiaPenSolid fill=\"#fff\" />\n                      </BtnEditTransaction>\n                    </ButtonContainer>\n                    <ButtonContainer>\n                      <ButtonDelTransaction\n                        type=\"button\"\n                        onClick={() => handleDeleteTransaction(transaction.id)}\n                      >\n                        Delete\n                      </ButtonDelTransaction>\n                    </ButtonContainer>\n                  </TableRow>\n                );\n              })}\n            </tbody>\n          </Table>\n        </TableWrapper>\n      </MediaQuery>\n    </>\n  ) : (\n    <NoTransactions>\n      No transactions yet! Add them by pressing \"+\" button\n    </NoTransactions>\n  );\n};\n\nexport default Transactions;\n","import styled from 'styled-components';\n\nexport const HomePageWrapper = styled.div`\n  @media only screen and (max-width: 767px) {\n    overflow: auto;\n    padding-left: 20px;\n    padding-right: 20px;\n    height: 100vh;\n  }\n  @media only screen and (min-width: 768px) and (max-width: 1279px) {\n    height: 57vh;\n  }\n`;\n","import { useMediaQuery } from 'react-responsive';\nimport { Balance } from 'components/Balance/Balance';\nimport { RoundButton } from 'components/RoundButton/RoundButton';\nimport Transactions from 'components/Transactions/Transactions';\nimport { HomePageWrapper } from './HomePage.styled';\n\nconst HomePage = () => {\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n  return (\n    <HomePageWrapper>\n      {isMobile && <Balance />}\n      <Transactions />\n      <RoundButton />\n    </HomePageWrapper>\n  );\n};\n\nexport default HomePage;\n","export const selectTransactions = state => state.transaction.transactions;\nexport const selectCategories = state => state.transaction.categories;\nexport const selectCategoriesSummary = state =>\n  state.transaction.categoriesSummary;\nexport const selectIncomeSummary = state => state.transaction.incomeSummary;\nexport const selectExpenseSummary = state => state.transaction.expenseSummary;\nexport const selectPeriodTotal = state => state.transaction.periodTotal;\nexport const selectIsLoading = state => state.transaction.isLoading;\n","export const getMonthAndYear = () => {\n  return {\n    month: new Date().getMonth() + 1,\n    year: new Date().getFullYear(),\n  };\n};\n\nexport const getDateForSort = isoDate => {\n  return Number(isoDate.split('-').join(''));\n};\n"],"names":["ContainerStyled","styled","TitleStyled","TextStyled","SpanStyled","total","BalanceIcon","LiaHryvniaSolid","Balance","dispatch","useDispatch","date","useRef","getMonthAndYear","transaction","useSelector","selectTransactions","useState","currentTotalBalance","setcurrentTotalBalance","useEffect","getSummaryThunk","then","data","payload","periodTotal","Number","toFixed","RoundedWrap","theme","spacing","colors","btnGradient","PlusBtn","BsPlusLg","RoundButton","onClick","openModalAddTransaction","AllTransactionsDetails","TransactionDetails","props","color","TransactionDetailsItem","fontWeights","normal","TransactionDetailsItemTitle","bold","TableWrapper","Table","TableHead","TableHeader","TableRow","fonts","regular","SumEl","Sum","TableDash","ButtonContainer","ButtonDelTransaction","ButtonEditTransaction","white","BtnEditTransaction","NoTransactions","LiaPenSolid","transactions","categories","selectCategories","getAllTransactionsThunk","getTransactionsCategoriesThunk","sortedTransactions","sort","a","b","getDateForSort","transactionDate","handleEditClick","obj","setUpdatedTransaction","openModalEditTransaction","handleDeleteTransaction","id","delTransactionThunk","formatDate","dateArr","split","year","month","day","length","maxWidth","map","type","find","cat","categoryId","name","comment","amount","minWidth","fill","HomePageWrapper","isMobile","useMediaQuery","query","state","selectCategoriesSummary","categoriesSummary","selectIncomeSummary","incomeSummary","selectExpenseSummary","expenseSummary","selectPeriodTotal","Date","getMonth","getFullYear","isoDate","join"],"sourceRoot":""}