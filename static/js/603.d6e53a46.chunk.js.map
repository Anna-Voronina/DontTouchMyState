{"version":3,"file":"static/js/603.d6e53a46.chunk.js","mappings":"+MAAaA,EAAqB,SAAAC,GAAK,OAAGA,EAAMC,QAAT,E,mBCE1BC,EAAsBC,EAAAA,GAAAA,MAAH,wzBACrB,qBAAGC,MAAkBC,OAAOC,WAA5B,IACI,qBAAGF,MAAkBG,UAAUC,CAA/B,IACE,qBAAGJ,MAAkBK,YAAYC,MAAjC,IAWE,qBAAGN,MAAkBO,YAAYC,QAAjC,IAyCNC,EAAoBV,EAAAA,GAAAA,MAAH,wU,oBCD9B,EAjDsB,WACpB,IAAMW,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,IAAYjB,GAAtCkB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,MAMxB,IAJAC,EAAAA,EAAAA,YAAU,WACRN,GAASO,EAAAA,EAAAA,KACV,GAAE,CAACP,IAEAI,EACF,OAAO,yBAAK,eAGd,GAAIC,EACF,OAAO,2BAAK,UAAQA,KAGtB,IAIMG,EAHGL,EAGgCM,QAAO,SAAAC,GAC9C,OAC0B,MAAvBA,EAAKC,eAAgD,MAAvBD,EAAKE,eACZ,MAAvBF,EAAKC,eAAgD,MAAvBD,EAAKE,aAEvC,IAED,OACE,UAACxB,EAAD,YACE,4BACE,2BACE,wBAAI,cACJ,wBAAI,cACJ,wBAAI,eAGR,SAACW,EAAD,UACGS,EAAcK,KAAI,SAAAH,GAAI,OACrB,2BACE,wBAA4B,MAAvBA,EAAKC,cAAwB,MAAQ,SAC1C,wBAAKD,EAAKI,QAAQC,QAAQ,MAC1B,wBAAKL,EAAKM,SAASD,QAAQ,QAHpBE,EAAAA,EAAAA,MADY,QAU9B,ECpDYC,EAAkB7B,EAAAA,GAAAA,IAAH,8J,gkBCYf8B,EAAgB,WAC3B,OACE,0BACE,gCACE,mBACEC,MAAM,sBACNC,OAAM,UAAKC,EAAL,gBAAgCC,EAAhC,OACNC,KAAK,gBAEP,mBACEJ,MAAM,sBACNC,OAAM,UAAKI,EAAL,gBAA4BC,EAA5B,OACNF,KAAK,eAGP,mBACEJ,MAAM,qBACNC,OAAM,UAAKM,EAAL,gBAAkCC,EAAlC,OACNJ,KAAK,gBAEP,mBACEJ,MAAM,qBACNC,OAAM,U,iuRAAA,gBAA8BQ,EAA9B,OACNL,KAAK,eAGP,mBACEJ,MAAM,qBACNC,OAAM,UAAKS,EAAL,gBAAkCC,EAAlC,OACNP,KAAK,gBAEP,mBACEJ,MAAM,qBACNC,OAAM,U,isRAAA,gBAA8BW,EAA9B,OACNR,KAAK,eAGP,gBAAKS,IAAKR,EAAiBS,IAAI,gBAAgB9B,QAAQ,aAI9D,ECnDY+B,EAAW,WACtB,OACE,UAACjB,EAAD,YACE,SAAC,EAAD,KACA,SAACC,EAAD,MAGL,C","sources":["redux/currency/currencySelectors.js","components/CurrencyTable/CurrencyTable.styled.js","components/CurrencyTable/CurrencyTable.jsx","components/Currency/Currency.styled.js","components/CurrencyChart/CurrencyChart.jsx","components/Currency/Currency.jsx"],"sourcesContent":["export const selectCurrencyData = state=> state.currency;\n","import styled from 'styled-components';\n\nexport const CurrencyTableStyled = styled.table`\n  color: ${({ theme }) => theme.colors.primaryFont};\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  line-height: ${({ theme }) => theme.lineHeights.normal};\n  width: 100%;\n  margin: 0 auto;\n  margin-top: 24px;\n  margin-bottom: 10px;\n\n  overflow: hidden;\n  border-radius: 5px;\n  border-collapse: collapse;\n\n  thead {\n    font-weight: ${({ theme }) => theme.fontWeights.semiBold};\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n\n  thead > tr {\n    height: 56px;\n  }\n\n  th {\n    width: 77px;\n    padding-right: 10px;\n  }\n\n  th:first-child {\n    padding-left: 10px;\n  }\n\n  td {\n    text-align: center;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    th {\n      padding-right: 20px;\n    }\n\n    th:first-child {\n      padding-left: 30px;\n    }\n\n    th:last-child {\n      padding-right: 50px;\n    }\n  }\n`;\n\nexport const CurrencyTableBody = styled.tbody`\n  td {\n    padding-top: 24px;\n    padding-right: 10px;\n    text-align: center;\n  }\n\n  td:first-child {\n    padding-left: 10px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    td:first-child {\n      padding-left: 30px;\n    }\n\n    td:last-child {\n      padding-right: 50px;\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCurrencyRatesAsync } from 'redux/currency/currencyOperations';\nimport { selectCurrencyData } from 'redux/currency/currencySelectors';\nimport { CurrencyTableBody, CurrencyTableStyled } from './CurrencyTable.styled';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst CurrencyTable = () => {\n  const dispatch = useDispatch();\n  const { rates, loading, error } = useSelector(selectCurrencyData);\n\n  useEffect(() => {\n    dispatch(fetchCurrencyRatesAsync());\n  }, [dispatch]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  const getCurrencyRates = () => {\n    return rates;\n  };\n\n  const filteredRates = getCurrencyRates().filter(rate => {\n    return (\n      (rate.currencyCodeA === 840 && rate.currencyCodeB !== 978) ||\n      (rate.currencyCodeA === 978 && rate.currencyCodeB !== 840)\n    );\n  });\n\n  return (\n    <CurrencyTableStyled>\n      <thead>\n        <tr>\n          <th>Currency</th>\n          <th>Purchase</th>\n          <th>Sale</th>\n        </tr>\n      </thead>\n      <CurrencyTableBody>\n        {filteredRates.map(rate => (\n          <tr key={nanoid()}>\n            <td>{rate.currencyCodeA === 840 ? 'USD' : 'EUR'}</td>\n            <td>{rate.rateBuy.toFixed(2)}</td>\n            <td>{rate.rateSell.toFixed(2)}</td>\n          </tr>\n        ))}\n      </CurrencyTableBody>\n    </CurrencyTableStyled>\n  );\n};\n\nexport default CurrencyTable;\n","import styled from 'styled-components';\n\nexport const CurrencyWrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    flex-grow: 1;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 100%;\n  }\n`;\n","import currencyImgDesk from 'assets/images/currency_desk.webp';\nimport currencyImgRetinaDesk from 'assets/images/currency_desk@2x.png';\nimport currencyImgTablet from 'assets/images/currency_tablet.png';\nimport currencyImgRetinaTablet from 'assets/images/currency_tablet@2x.png';\nimport currencyImgMobile from 'assets/images/currency_mobile.png';\nimport currencyImgRetinaMobile from 'assets/images/currency_mobile@2x.png';\n\nimport currencyImgDeskWebp from 'assets/images/currency_desk.webp';\nimport currencyImgRetinaDeskWebp from 'assets/images/currency_desk@2x.webp';\nimport currencyImgTabletWebp from 'assets/images/currency_tablet.webp';\nimport currencyImgRetinaTabletWebp from 'assets/images/currency_tablet@2x.webp';\nimport currencyImgMobileWebp from 'assets/images/currency_mobile.webp';\nimport currencyImgRetinaMobileWebp from 'assets/images/currency_mobile@2x.webp';\n\nexport const CurrencyChart = () => {\n  return (\n    <div>\n      <picture>\n        <source\n          media=\"(min-width: 1280px)\"\n          srcSet={`${currencyImgDeskWebp} 1x, ${currencyImgRetinaDeskWebp} 2x`}\n          type=\"image/webp\"\n        />\n        <source\n          media=\"(min-width: 1280px)\"\n          srcSet={`${currencyImgDesk} 1x, ${currencyImgRetinaDesk} 2x`}\n          type=\"image/png\"\n        />\n\n        <source\n          media=\"(min-width: 768px)\"\n          srcSet={`${currencyImgTabletWebp} 1x, ${currencyImgRetinaTabletWebp} 2x`}\n          type=\"image/webp\"\n        />\n        <source\n          media=\"(min-width: 768px)\"\n          srcSet={`${currencyImgTablet} 1x, ${currencyImgRetinaTablet} 2x`}\n          type=\"image/png\"\n        />\n\n        <source\n          media=\"(max-width: 767px)\"\n          srcSet={`${currencyImgMobileWebp} 1x, ${currencyImgRetinaMobileWebp} 2x`}\n          type=\"image/webp\"\n        />\n        <source\n          media=\"(max-width: 767px)\"\n          srcSet={`${currencyImgMobile} 1x, ${currencyImgRetinaMobile} 2x`}\n          type=\"image/png\"\n        />\n\n        <img src={currencyImgDesk} alt=\"Currency rate\" loading=\"lazy\" />\n      </picture>\n    </div>\n  );\n};\n","import CurrencyTable from 'components/CurrencyTable/CurrencyTable';\nimport { CurrencyWrapper } from './Currency.styled';\nimport { CurrencyChart } from 'components/CurrencyChart/CurrencyChart';\n\nexport const Currency = () => {\n  return (\n    <CurrencyWrapper>\n      <CurrencyTable />\n      <CurrencyChart />\n    </CurrencyWrapper>\n  );\n};\n"],"names":["selectCurrencyData","state","currency","CurrencyTableStyled","styled","theme","colors","primaryFont","fontSizes","m","lineHeights","normal","fontWeights","semiBold","CurrencyTableBody","dispatch","useDispatch","useSelector","rates","loading","error","useEffect","fetchCurrencyRatesAsync","filteredRates","filter","rate","currencyCodeA","currencyCodeB","map","rateBuy","toFixed","rateSell","nanoid","CurrencyWrapper","CurrencyChart","media","srcSet","currencyImgDeskWebp","currencyImgRetinaDeskWebp","type","currencyImgDesk","currencyImgRetinaDesk","currencyImgTabletWebp","currencyImgRetinaTabletWebp","currencyImgRetinaTablet","currencyImgMobileWebp","currencyImgRetinaMobileWebp","currencyImgRetinaMobile","src","alt","Currency"],"sourceRoot":""}