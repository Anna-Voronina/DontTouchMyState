{"version":3,"file":"static/js/793.9d1dd363.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/FormError/FormError.styled.js","components/FormError/FormError.jsx","components/LoginForm/LoginForm.styled.jsx","components/Logo/Logo.styled.jsx","assets/images/moneyGuardLogo.svg","components/Logo/Logo.jsx","services/validation/validationLoginSchema.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  width: ${({ theme }) => theme.spacing(60)};\n  height: ${({ theme }) => theme.spacing(12.5)};\n  background: ${({ theme }) => theme.colors.btnGradient};\n  border-radius: ${({ theme }) => theme.radii.button};\n  box-shadow: ${({ theme }) => theme.shadows.secondary};\n\n  color: ${({ theme }) => theme.colors.primaryFont};\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 1.8px;\n  text-transform: uppercase;\n  border: none;\n  cursor: pointer;\n\n  /* Вариант \"primary\" */\n  ${({ variant }) =>\n    variant === 'primary' &&\n    css`\n      background: ${({ theme }) => theme.colors.btnGradient};\n    `}\n\n  /* Вариант \"secondary\" */\n  ${({ variant }) =>\n    variant === 'secondary' &&\n    css`\n      color: ${({ theme }) => theme.colors.btnVioletText};\n      background: ${({ theme }) => theme.colors.btnWhiteBg};\n      border: ${({ theme }) => theme.borders.normal};\n      border-color: ${({ theme }) => theme.colors.blue};\n    `}\n /* Вариант \"third\" */\n      ${({ variant }) =>\n    variant === 'third' &&\n    css`\n      width: ${({ theme }) => theme.spacing(17.5)};\n      height: ${({ theme }) => theme.spacing(7.5)};\n    `}\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled';\n\nexport const Button = ({ onClick = null, text, type = 'button', variant = 'primary' }) => {\n  return (\n    <ButtonStyled type={type} onClick={onClick} variant={variant}>\n      {text}\n    </ButtonStyled>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  variant: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  color: ${({ theme }) => theme.colors.pink};\n  font-style: italic;\n  font-size: ${({ theme }) => theme.fontSizes.s};\n`;\n","import PropTypes from 'prop-types';\nimport { ErrorMessage } from 'formik';\nimport { ErrorText } from 'components/FormError/FormError.styled';\n\nexport const FormError = ({ name }) => {\n  return <ErrorMessage name={name} render={message => <ErrorText>{message}</ErrorText>} />;\n};\n\nFormError.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import { Field, Form } from 'formik';\nimport { IoMdMail, IoMdLock } from 'react-icons/io';\nimport styled from 'styled-components';\n\nexport const WrapperForm = styled.div`\n  padding: 80px 62px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 533px;\n\n  margin: 0 auto;\n  border-radius: ${({ theme }) => theme.radii.normal};\n  box-shadow: ${({ theme }) => theme.shadows.primary};\n\n  background-color: rgba(47, 21, 176, 0.73);\n`;\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(10)};\n`;\n\nexport const WrapperField = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const FieldStyled = styled(Field)`\n  margin-top: 40px;\n  padding-left: 40px;\n  width: ${({ theme }) => theme.spacing(102)};\n  height: ${({ theme }) => theme.spacing(9)};\n  outline: none;\n  border: none;\n  border-bottom: 2px solid grey;\n  background-color: rgba(255, 255, 255, 0);\n  color: grey;\n  position: relative;\n  &:focus {\n    outline: none;\n    border: none;\n    border-bottom: 2px solid grey;\n  }\n`;\n\nexport const WrapperButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(5)};\n`;\n\nexport const EmailIcon = styled(IoMdMail)`\n  height: 24px;\n\n  color: grey;\n  position: absolute;\n  left: 8px;\n  top: 74%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  z-index: 1;\n`;\n\nexport const WrapperIcon = styled.div`\n  position: relative;\n`;\nexport const WrapperIcon2 = styled.div`\n  position: relative;\n`;\nexport const PasswordlIcon = styled(IoMdLock)`\n  height: 24px;\n  width: 24px;\n  color: grey;\n  position: absolute;\n  left: 8px;\n  top: 74%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  z-index: 1;\n`;\nexport const WrapperIcon3 = styled.div`\n  position: relative;\n`;\n\nexport const PasswordlIconLook = styled.div`\n  height: 24px;\n  width: 24px;\n  color: grey;\n  position: absolute;\n  right: 0;\n  top: 63%;\n`;\n","import styled from 'styled-components';\n\nexport const WrapperLogo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const TitleLogo = styled.h2`\n  color: ${({ theme }) => theme.colors.primaryFont};\n  text-align: center;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: 27px;\n  font-style: normal;\n  font-weight: 400;\n\n  letter-spacing: 1.8px;\n\n  cursor: pointer;\n`;\n","var _path, _path2, _path3, _path4, _path5;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMoneyGuardLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"MoneyGuardLogo\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ffc727\",\n    d: \"M21.94 4.396c-2.263-0.566-4.526-1.698-6.223-3.397-1.697 1.698-3.96 2.83-6.223 3.397 0.566 5.095 2.263 8.491 6.223 11.322 3.96-2.831 6.223-6.227 6.223-11.322z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fbfbfb\",\n    d: \"M19.677 25.474l-15.84-18.681v9.057l12.446 14.152 3.394-4.529z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fbfbfb\",\n    d: \"M21.374 23.776l6.789-7.925v-8.491l-10.749 12.454 3.96 3.963z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fbfbfb\",\n    d: \"M21.94 26.606v5.095l6.223-7.359v-5.095l-6.223 7.359z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fbfbfb\",\n    d: \"M10.060 26.606l-6.223-7.359v5.095l6.223 7.359v-5.095z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMoneyGuardLogo);\nexport default __webpack_public_path__ + \"static/media/moneyGuardLogo.dbc52635efdf8219ee1a2f3c5f17f1d2.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { TitleLogo, WrapperLogo } from './Logo.styled';\nimport moneyGuardLogo from 'assets/images/moneyGuardLogo.svg';\nexport const Logo = () => {\n  return (\n    <WrapperLogo>\n      <img src={moneyGuardLogo} alt=\"MoneyGuard Logo\" />\n      <TitleLogo>Money Guard</TitleLogo>\n    </WrapperLogo>\n  );\n};\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email address')\n    .test('trim', 'The field must not start or end with spaces', value => {\n      if (value) {\n        return value.trim() === value;\n      }\n      return true;\n    })\n    .required('required field')\n    .max(30, 'the name must contain a maximum of 30 characters'),\n  password: yup\n    .string()\n    .test('trim', 'The field must not start or end with spaces', value => {\n      if (value) {\n        return value.trim() === value;\n      }\n      return true;\n    })\n    .required('required field')\n    .min(6, 'Password must contain at least 6 characters')\n    .max(12, 'Password must contain a maximum of 12 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,12}$/,\n      'Password must contain at least one uppercase letter, one lowercase letter and one number'\n    ),\n});\n","import { Button } from 'components/Button/Button';\nimport { FormError } from 'components/FormError/FormError';\nimport { Formik } from 'formik';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\n\nimport { loginSchema } from 'services/validation/validationLoginSchema';\nimport {\n  EmailIcon,\n  FieldStyled,\n  FormStyled,\n  PasswordlIcon,\n  PasswordlIconLook,\n  WrapperButton,\n  WrapperField,\n  WrapperForm,\n  WrapperIcon,\n  WrapperIcon2,\n  WrapperIcon3,\n} from './LoginForm.styled';\nimport { Logo } from 'components/Logo/Logo';\n\nimport { Link } from 'react-router-dom';\nimport { logInThunk } from 'redux/auth/authOperations';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nexport const LoginForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const hendleSubmit = (value, { resetForm }) => {\n    dispatch(logInThunk(value));\n    console.log(value);\n    resetForm();\n  };\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n  return (\n    <WrapperForm>\n      <Logo />\n      <Formik initialValues={initialValues} validationSchema={loginSchema} onSubmit={hendleSubmit}>\n        <FormStyled autoComplete=\"off\">\n          <WrapperField>\n            <WrapperIcon>\n              <FieldStyled\n                type=\"email\"\n                name=\"email\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder=\"E-mail\"\n                required\n              />\n              <EmailIcon />\n            </WrapperIcon>\n            <FormError name=\"email\" />\n            <WrapperIcon3>\n              <WrapperIcon2>\n                <FieldStyled\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  title=\"Enter the password more difficult, letter, digit, capital letter.\"\n                  placeholder=\"Password\"\n                  required\n                />\n                <PasswordlIcon />\n              </WrapperIcon2>\n              <PasswordlIconLook>\n                {showPassword ? (\n                  <FaEyeSlash onClick={togglePasswordVisibility} />\n                ) : (\n                  <FaEye onClick={togglePasswordVisibility} />\n                )}\n              </PasswordlIconLook>\n            </WrapperIcon3>\n            <FormError name=\"password\" />\n          </WrapperField>\n          <WrapperButton>\n            <Button type=\"submit\" text=\"log in\" />\n            <Link to=\"/register\">\n              <Button text=\"register\" variant=\"secondary\" />\n            </Link>\n          </WrapperButton>\n        </FormStyled>\n      </Formik>\n    </WrapperForm>\n  );\n};\n","import styled from 'styled-components';\nimport bgImage from 'assets/images/bgLoginPage.png';\n\nexport const BgImage = styled.div`\n  max-width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-position: center;\n  background-repeat: no-repeat;\n\n  background: linear-gradient(46deg, rgba(142, 46, 121, 0.68) 0%, rgba(171, 51, 173, 0.68) 100%);\n  background: linear-gradient(\n    220deg,\n    rgba(109, 84, 235, 0.73) 3.47%,\n    rgba(101, 35, 146, 0.73) 90.06%\n  );\n  background: linear-gradient(220deg, #6d54eb 3.47%, #652392 90.06%);\n\n  background: #302e8e;\n  background-image: url(${bgImage});\n  background-size: cover;\n\n  /* Для мобильных устройств (ширина меньше 768px) */\n  @media screen and (max-width: 768px) {\n    background-image: none;\n    background: linear-gradient(\n      220deg,\n      rgba(109, 84, 235, 0.73) 3.47%,\n      rgba(101, 35, 146, 0.73) 90.06%\n    );\n    background: linear-gradient(220deg, #6d54eb 3.47%, #652392 90.06%);\n\n    min-width: 320px;\n    height: 568px;\n  }\n\n  /* Для планшетов (ширина от 768px до 1279px) */\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n  }\n`;\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { BgImage } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <BgImage>\n      <LoginForm />\n    </BgImage>\n  );\n};\n\nexport default LoginPage;\n"],"names":["ButtonStyled","styled","theme","spacing","colors","btnGradient","radii","button","shadows","secondary","primaryFont","fonts","regular","variant","css","btnVioletText","btnWhiteBg","borders","normal","blue","Button","onClick","text","type","ErrorText","pink","fontSizes","s","FormError","name","render","message","WrapperForm","primary","FormStyled","Form","WrapperField","FieldStyled","Field","WrapperButton","EmailIcon","IoMdMail","WrapperIcon","WrapperIcon2","PasswordlIcon","IoMdLock","WrapperIcon3","PasswordlIconLook","WrapperLogo","TitleLogo","Logo","src","moneyGuardLogo","alt","loginSchema","yup","shape","email","test","value","trim","required","max","password","min","matches","LoginForm","useState","showPassword","setShowPassword","dispatch","useDispatch","togglePasswordVisibility","prevShowPassword","initialValues","validationSchema","onSubmit","resetForm","logInThunk","console","log","autoComplete","title","placeholder","to","BgImage","bgImage"],"sourceRoot":""}